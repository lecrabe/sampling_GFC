options(stringsAsFactors=FALSE)
######getwd is the function to get my working directory
getwd()
setwd("C:/Users/dannunzio/Documents/countries/ethiopia/change_detection_ethiopia/hansen_data/")
# change my working directory to something else
#setwd("PATH_TO_YOUR_DATA_FOLDER")
# example of path to data folder
#setwd("F:/hansen_data")
#setwd("/media/xubuntu/OSDisk/Users/dannunzio/Documents/countries/ethiopia/change_detection_ethiopia/cd_ethiopia_sampling/hansen_data/")
rasterloss <- 'gfc_ethiopia_loss.tif'
rastergains <- 'gfc_ethiopia_gain.tif'
rastermask <- 'gadm_ethiopia.tif'
library(Hmisc)
library(foreign)
library(rgdal)
library(sp)
library(raster)
################################################
################################################
# PART 1 ----  READ THE RASTER AND DRAW POINTS
################################################
################################################
# ######### Read the raster file, look at its properties
rast<-raster("resampled_loss.tif")
# ######### Draw 1000 random points within the extension of the raster
# ######### "xy=TRUE" means you want to keep the coordinates
tmp <- sampleRandom(rast,1000,xy=TRUE)
#?sampleRandom
# ######### Convert to a data frame, check the structure
my_sample <- data.frame(tmp)
str(my_sample)
# ######### Load boundaries of the country
mask <- raster(rastermask)
#plot(mask)
# ######### Extract values of the mask on point locations
maskval <- extract(mask,my_sample[,c(1:2)])
my_sample$mask<-maskval
# ######### Change the names, check the structure again
names(my_sample) <- c("x_coord","y_coord","value","mask")
str(my_sample)
#?names
# ######### Look at the first 6 values
head(my_sample)
# ######### Look at the first 25 values
head(my_sample,25)
# ######### Display the distribution of values
table(my_sample$value,my_sample$mask)
# ######### Extract the X and Y columns
x<-my_sample$x_coord
y<-my_sample$y_coord
setwd("C:/Users/dannunzio/Documents/R/my_shiny_apps/sampler/data/")
rast_loss  <- raster('resampled_loss.tif')
rast_gain  <- raster('resampled_gain.tif')
options(stringsAsFactors=FALSE)
setwd("C:/Users/dannunzio/Documents/R/my_shiny_apps/sampler/data/")
rast_loss  <- raster('resampled_loss.tif')
rast_gain  <- raster('resampled_gain.tif')
rast_mask  <- raster('gadm_ethiopia.tif')
rast_tcov  <- raster('gfc_ethiopia_tc.tif')
pts_loss   <- read.table("pts_loss.txt")
pts_gain   <- read.table("pts_gain.txt")
#pts_loss   <- rasterToPoints(rast_loss,fun=function(rast){rast==9})
#pts_gain   <- rasterToPoints(rast_gain,fun=function(rast){rast==9})
df_pts_loss<- as.data.frame(pts_loss)
df_pts_gain<- as.data.frame(pts_gain)
#write.table(pts_loss,"pts_loss.txt")
#write.table(pts_gain,"pts_gain.txt")
# ######### Interactive data parameters
tot_nb_rand  <- 8000
nb_noloss_NF <- 100#input$sampling_rate
nb_noloss_F  <- 100#input$sampling_rate
nb_loss      <- 100#input$sampling_rate
nb_gain      <- 100#input$sampling_rate
nb_noloss_NF <- 200#input$sampling_rate
nb_noloss_F  <- 100#input$sampling_rate
nb_loss      <- 300#input$sampling_rate
nb_gain      <- 300#input$sampling_rate
tc_threshold <- 30#input$treecover
names(df_pts_gain) <- c("x_coord","y_coord","value")
df_pts_gain$id<-row(df_pts_gain)[,1]
gain_pts<-df_pts_gain[df_pts_gain$id %in% sample(df_pts_gain$id,nb_gain),]
all_points <- df_pts_gain
all_points <- gain_pts
sp_df<-SpatialPointsDataFrame(
coords=all_points[,c(1,2)],
data=data.frame(all_points[,c(4,3)]),
proj4string=CRS("+proj=longlat +datum=WGS84")
)
basename     <- "gains"
writeOGR(obj=sp_df,dsn=paste(basename,".kml"),layer=basename,driver = "KML")
